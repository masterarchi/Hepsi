<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>
        <!--kullanılacak veritabanı driver tanımlama : -->
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <!-- bağlantı için gerekli değerler : -->
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:5432/Java12HibernateDB</property>
        <property name="hibernate.connection.username">postgres</property>
        <property name="hibernate.connection.password">1234</property>
        <!-- en önemli ayarlardan birisi. bu ayar ile otomatik olarak tablo oluşturma ve güncelleme işlemlerinin modunu belirlersiniz
         CREATE: Proje her yeni başladığında tablolar yeniden olutşrulur. Mevcut tablolar silinir.
         CREATE - DROP : Create ile aynı işlemi yapıyor. Tek farklı projeyi kapattığınız an oluşturduğu tabloları siler . Test için kullanılabilir.
         UPDATE : Eğer vt'da tablo yoksa oluşturu. Varsa yapısal değişiklikleri uygular. Verileri silmez.
         VALIDATE : VT'DAKİ TABLOLAR İLE PROJEDEKİ ENTİTYHLER UYUMLU DEĞİL Mİ ? kontrol edip hata varsa hata mesajı fırlatır.
         -->
        <property name="hibernate.hbm2ddl.auto">update</property>

        <!-- Hibernate'in arka planda çalıştırdığı SQL sorgusunu console ekranına yazdırması sağlmak için-->
        <property name="hibernate.show_sql">true</property>

        <!-- Yazdığı SQL sorgusunu daha düzenli göstermesi için kullanılır.       -->
        <property name="hibernate.format_sql">true</property>
        <!-- HİBERNATE @ ENTİTY ile işaretlenmemiş sınıfları burada mapping içine yazsanız bile maplemez
         Hibernate -->

        <mapping class="org.entity.Urun"/>
        <mapping class="org.entity.Sepet"/>
    </session-factory>

</hibernate-configuration>